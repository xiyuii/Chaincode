{
    "Qwen-max": "\n\n    def history(self):\n        content = self.path.read_text()\n        history_content = json.loads(content)\n        history_response = ''\n        for value in history_content.values():\n            history_response = f'''{value}\n{history_response}'''\n        return history_response\n\n    def call_agent_app(self):\n        history_response = self.history()\n\n        response = Application.call(\n            app_id = self.robot,\n            prompt = f\"这是以前的回答{history_response}，回答时以此为参考，但不要有任何提及，只回答这个问题：{self.question}\",\n            api_key = self.api\n        )\n\n        if response.status_code != HTTPStatus.OK:\n            return response.message\n        \n        else:\n            return response.output\n\n    ",
    "ChatGpt-3.5": "\n\n    def history(self):\n        content = self.path.read_text()\n        history_content = json.loads(content)\n        history_response = ''\n        for value in history_content.values():\n            history_response = f'''{value}\n{history_response}'''\n        return history_response\n    \n    def call_agent_app(self):\n        history_response=self.history\n\n        openai.api_key = self.api\n        response = openai.ChatCompletion.create(\n            model='gpt-3.5-turbo',\n            message=[\n                {'role': 'system', 'content': self.promot},\n                {'role': 'user', 'content': f'这是以前的回答{history_response}，回答时以此为参考，但不要有任何提及，只回答这个问题：{self.question}'},\n            ]\n        )\n\n        return response['choices'][0]['message']['content']\n"
}